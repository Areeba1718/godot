#!/usr/bin/env python
from misc.utility.scons_hints import *

Import("env")
Import("env_modules")

env_webp = env_modules.Clone()

# Thirdparty source files

thirdparty_obj = []

if env["builtin_libwebp"]:
    thirdparty_dir = "#thirdparty/libwebp/"
    thirdparty_sources = [
        "sharpyuv/*.c",
        "src/dec/*.c",
        "src/demux/*.c",
        "src/dsp/*.c",
        "src/enc/*.c",
        "src/mux/*.c",
        "src/utils/*.c",
    ]
    thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

    env_webp.Prepend(CPPPATH=[thirdparty_dir, thirdparty_dir + "src/"])

    env_thirdparty = env_webp.Clone()
    env_thirdparty.disable_warnings()
    env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
    env.modules_sources += thirdparty_obj


# Godot source files

module_obj = []

env_webp.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, thirdparty_obj)
