#!/usr/bin/env python

from typing import TYPE_CHECKING

from SCons.Script.SConscript import SConsEnvironment

if TYPE_CHECKING:
    env = SConsEnvironment()
    env_modules = SConsEnvironment()
    Import = SConsEnvironment.Import

Import("env")
Import("env_modules")

env_gdscript = env_modules.Clone()

env_gdscript.add_source_files(env.modules_sources, "*.cpp")

if env.editor_build:
    env_gdscript.add_source_files(env.modules_sources, "./editor/*.cpp")

    env.SConscript("editor/script_templates/SCsub")

    # Those two modules are required for the language server protocol
    if env["module_jsonrpc_enabled"] and env["module_websocket_enabled"]:
        env_gdscript.add_source_files(env.modules_sources, "./language_server/*.cpp")
    else:
        # Using a define in the disabled case, to avoid having an extra define
        # in regular builds where all modules are enabled.
        env_gdscript.Append(CPPDEFINES=["GDSCRIPT_NO_LSP"])
        # Also needed in main env to unexpose --lsp-port option.
        env.Append(CPPDEFINES=["GDSCRIPT_NO_LSP"])


if env["tests"]:
    env_gdscript.Append(CPPDEFINES=["TESTS_ENABLED"])
    env_gdscript.add_source_files(env.modules_sources, "./tests/*.cpp")
