#!/usr/bin/env python

Import("env")
Import("env_modules")

env_switch = env_modules.Clone()

# Thirdparty source files

thirdparty_obj = []

if env["builtin_switchtools"]:
    thirdparty_dir = "#thirdparty/switch-tools/"
    thirdparty_sources = [
        "src/blz.c",
        "src/build_romfs.c",
        "src/cJSON.c",
        "src/elf2kip.c",
        "src/elf2nro.c",
        "src/elf2nso.c",
        "src/filepath.c",
        "src/nacptool.c",
        "src/npdmtool.c",
        "src/nxlink.c",
        "src/romfs.c",
        "src/sha256.c",
    ]
    thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

    env_switch.Prepend(CPPPATH=[thirdparty_dir])

    env_thirdparty = env_switch.Clone()
    env_thirdparty.disable_warnings()
    env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
    env.modules_sources += thirdparty_obj


# Godot source files

module_obj = []

env_switch.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, thirdparty_obj)
