<?xml version="1.0" encoding="UTF-8" ?>
<class name="FileDialog" inherits="ConfirmationDialog" version="4.0">
	<brief_description>
		Dialog for selecting files or directories in the filesystem.
	</brief_description>
	<description>
		FileDialog is a preset dialog used to choose files and directories in the filesystem. It supports filter masks. The FileDialog automatically sets its window title according to the [member file_mode]. If you want to use a custom title, disable this by setting [member mode_overrides_title] to [code]false[/code].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_filter">
			<return type="void">
			</return>
			<argument index="0" name="filter" type="String">
			</argument>
			<description>
				Adds [code]filter[/code] as a custom filter; [code]filter[/code] should be of the form [code]"filename.extension ; Description"[/code]. For example, [code]"*.png ; PNG Images"[/code].
			</description>
		</method>
		<method name="clear_filters">
			<return type="void">
			</return>
			<description>
				Clear all the added filters in the dialog.
			</description>
		</method>
		<method name="deselect_all">
			<return type="void">
			</return>
			<description>
				Clear all currently selected items in the dialog.
			</description>
		</method>
		<method name="get_line_edit">
			<return type="LineEdit">
			</return>
			<description>
				Returns the LineEdit for the selected file.
			</description>
		</method>
		<method name="get_vbox">
			<return type="VBoxContainer">
			</return>
			<description>
				Returns the vertical box container of the dialog, custom controls can be added to it.
			</description>
		</method>
		<method name="invalidate">
			<return type="void">
			</return>
			<description>
				Invalidate and update the current dialog content list.
			</description>
		</method>
	</methods>
	<members>
		<member name="access" type="int" setter="set_access" getter="get_access" enum="FileDialog.Access" default="0">
			The file system access scope. See enum [code]Access[/code] constants.
			[b]Warning:[/b] Currently, in sandboxed environments such as HTML5 builds or sandboxed macOS apps, FileDialog cannot access the host file system. See [url=https://github.com/godotengine/godot-proposals/issues/1123]godot-proposals#1123[/url].
		</member>
		<member name="current_dir" type="String" setter="set_current_dir" getter="get_current_dir" default="&quot;res://&quot;">
			The current working directory of the file dialog.
		</member>
		<member name="current_file" type="String" setter="set_current_file" getter="get_current_file" default="&quot;&quot;">
			The currently selected file of the file dialog.
		</member>
		<member name="current_path" type="String" setter="set_current_path" getter="get_current_path" default="&quot;res://&quot;">
			The currently selected file path of the file dialog.
		</member>
		<member name="dialog_hide_on_ok" type="bool" setter="set_hide_on_ok" getter="get_hide_on_ok" overrides="AcceptDialog" default="false" />
		<member name="file_mode" type="int" setter="set_file_mode" getter="get_file_mode" enum="FileDialog.FileMode" default="4">
		</member>
		<member name="filters" type="PackedStringArray" setter="set_filters" getter="get_filters" default="PackedStringArray(  )">
			The available file type filters. For example, this shows only [code].png[/code] and [code].gd[/code] files: [code]set_filters(PackedStringArray(["*.png ; PNG Images","*.gd ; GDScript Files"]))[/code].
		</member>
		<member name="mode_overrides_title" type="bool" setter="set_mode_overrides_title" getter="is_mode_overriding_title" default="true">
			If [code]true[/code], changing the [code]Mode[/code] property will set the window title accordingly (e.g. setting mode to [constant FILE_MODE_OPEN_FILE] will change the window title to "Open a File").
		</member>
		<member name="show_hidden_files" type="bool" setter="set_show_hidden_files" getter="is_showing_hidden_files" default="false">
			If [code]true[/code], the dialog will show hidden files.
		</member>
		<member name="title" type="String" setter="set_title" getter="get_title" overrides="Window" default="&quot;Save a File&quot;" />
	</members>
	<signals>
		<signal name="dir_selected">
			<argument index="0" name="dir" type="String">
			</argument>
			<description>
			</description>
		</signal>
		<signal name="file_selected">
			<argument index="0" name="path" type="String">
			</argument>
			<description>
			</description>
		</signal>
		<signal name="files_selected">
			<argument index="0" name="paths" type="PackedStringArray">
			</argument>
			<description>
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="FILE_MODE_OPEN_FILE" value="0" enum="FileMode">
		</constant>
		<constant name="FILE_MODE_OPEN_FILES" value="1" enum="FileMode">
		</constant>
		<constant name="FILE_MODE_OPEN_DIR" value="2" enum="FileMode">
		</constant>
		<constant name="FILE_MODE_OPEN_ANY" value="3" enum="FileMode">
		</constant>
		<constant name="FILE_MODE_SAVE_FILE" value="4" enum="FileMode">
		</constant>
		<constant name="ACCESS_RESOURCES" value="0" enum="Access">
		</constant>
		<constant name="ACCESS_USERDATA" value="1" enum="Access">
		</constant>
		<constant name="ACCESS_FILESYSTEM" value="2" enum="Access">
		</constant>
	</constants>
	<theme_items>
		<theme_item name="back_folder" type="Texture2D">
			Custom icon for the back arrow.
		</theme_item>
		<theme_item name="file" type="Texture2D">
		</theme_item>
		<theme_item name="file_icon_modulate" type="Color" default="Color( 1, 1, 1, 1 )">
		</theme_item>
		<theme_item name="files_disabled" type="Color" default="Color( 0, 0, 0, 0.7 )">
		</theme_item>
		<theme_item name="folder" type="Texture2D">
		</theme_item>
		<theme_item name="folder_icon_modulate" type="Color" default="Color( 1, 1, 1, 1 )">
		</theme_item>
		<theme_item name="forward_folder" type="Texture2D">
		</theme_item>
		<theme_item name="parent_folder" type="Texture2D">
		</theme_item>
		<theme_item name="reload" type="Texture2D">
		</theme_item>
		<theme_item name="toggle_hidden" type="Texture2D">
		</theme_item>
	</theme_items>
</class>
