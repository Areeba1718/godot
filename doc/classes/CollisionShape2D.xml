<?xml version="1.0" encoding="UTF-8" ?>
<class name="CollisionShape2D" inherits="Node2D" category="Core" version="3.0-alpha">
	<brief_description>
		Node that represents collision shape data in 2D space.
	</brief_description>
	<description>
		Editor facility for creating and editing collision shapes in 2D space. You can use this node to represent all sorts of collision shapes, for example, add this to an [Area2D] to give it a detection shape, or add it to a [PhysicsBody2D] to give create solid object. [b]IMPORTANT[/b]: this is an Editor-only helper to create shapes, use [method get_shape] to get the actual shape.
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="get_shape" qualifiers="const">
			<return type="Shape2D">
			</return>
			<description>
			</description>
		</method>
		<method name="is_disabled" qualifiers="const">
			<return type="bool">
			</return>
			<description>
			</description>
		</method>
		<method name="is_one_way_collision_enabled" qualifiers="const">
			<return type="bool">
			</return>
			<description>
				Returns whether the CollisionShape2D is solid to other objects from only one side.
			</description>
		</method>
		<method name="get_one_way_collision_angle" qualifiers="const">
			<return type="float">
			</return>
			<description>
				Returns the angle (in radians) at which the CollisionShape2D is solid to other objects from, if [code]one_way_collision_enabled[/code] is [code]true[/code].
			</description>
		</method>
		<method name="get_one_way_collision_angle_degrees" qualifiers="const">
			<return type="float">
			</return>
			<description>
				Returns the angle (in degrees) at which the CollisionShape2D is solid to other objects from, if [code]one_way_collision_enabled[/code] is [code]true[/code].
			</description>
		</method>
		<method name="set_disabled">
			<return type="void">
			</return>
			<argument index="0" name="disabled" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_one_way_collision_enabled">
			<return type="void">
			</return>
			<argument index="0" name="enabled" type="bool">
			</argument>
			<description>
				Set whether the CollisionShape2D is solid to other objects from only one side.
			</description>
		</method>
		<method name="set_one_way_collision_angle">
			<return type="void">
			</return>
			<argument index="0" name="angle" type="float">
			</argument>
			<description>
				Set the angle (in radians) from which the CollisionShape2D is solid to other objects, if [code]one_way_collision_enabled[/code] is [code]true[/code].
			</description>
		</method>
		<method name="set_one_way_collision_angle_degrees">
			<return type="void">
			</return>
			<argument index="0" name="angle_degrees" type="float">
			</argument>
			<description>
				Set the angle (in degrees) from which the CollisionShape2D is solid to other objects, if [code]one_way_collision_enabled[/code] is [code]true[/code].
			</description>
		</method>
		<method name="set_shape">
			<return type="void">
			</return>
			<argument index="0" name="shape" type="Shape2D">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="disabled" type="bool" setter="set_disabled" getter="is_disabled">
			A disabled collision shape has no effect in the world.
		</member>
		<member name="one_way_collision_enabled" type="bool" setter="set_one_way_collision_enabled" getter="is_one_way_collision_enabled">
			If [code]true[/code], the CollisionShape2D will only let other objects collide with it from one side. The specific angle is set by [code]one_way_collision_angle[/code].
		</member>
		<member name="one_way_collision_angle" type="float" setter="set_one_way_collision_angle" getter="get_one_way_collision_angle">
			The angle (in radians) from which the CollisionShape2D is solid when [code]one_way_collision_enabled[/code] is [code]true[/code].
		</member>
		<member name="shape" type="Shape2D" setter="set_shape" getter="get_shape">
			The actual shape owned by this collision shape.
		</member>
	</members>
	<constants>
	</constants>
</class>
