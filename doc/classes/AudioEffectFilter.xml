<?xml version="1.0" encoding="UTF-8" ?>
<class name="AudioEffectFilter" inherits="AudioEffect" category="Core" version="3.0.alpha.custom_build">
	<brief_description>
		Adds a Filter to the Audio Bus.
	</brief_description>
	<description>
		The effect lets all frequences other than the [code]Cutoff HZ[/code] pass.
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="get_cutoff" qualifiers="const">
			<return type="float">
			</return>
			<description>
				Return the current cutoff frequence.
			</description>
		</method>
		<method name="get_db" qualifiers="const">
			<return type="int" enum="AudioEffectFilter.FilterDB">
			</return>
			<description>
				Return the constant of the current filter's dB.
			</description>
		</method>
		<method name="get_gain" qualifiers="const">
			<return type="float">
			</return>
			<description>
				Return the current amount of gain.
			</description>
		</method>
		<method name="get_resonance" qualifiers="const">
			<return type="float">
			</return>
			<description>
				Return the current amount of resonance.
			</description>
		</method>
		<method name="set_cutoff">
			<return type="void">
			</return>
			<argument index="0" name="freq" type="float">
			</argument>
			<description>
				Set the threshold frequence in [code]float[/code] that the filter uses to apply its effect.
			</description>
		</method>
		<method name="set_db">
			<return type="void">
			</return>
			<argument index="0" name="amount" type="int" enum="AudioEffectFilter.FilterDB">
			</argument>
			<description>
				Set the [code]amount[/code] of dB in [code]int[/code] for the effect's volume.
			</description>
		</method>
		<method name="set_gain">
			<return type="void">
			</return>
			<argument index="0" name="amount" type="float">
			</argument>
			<description>
				Set the [code]amount[/code] of gain in [code]float[/code] for the frequence's gain.
			</description>
		</method>
		<method name="set_resonance">
			<return type="void">
			</return>
			<argument index="0" name="amount" type="float">
			</argument>
			<description>
				Set the [code]amount[/code] of resonance in [code]float[/code] for the overtones.
			</description>
		</method>
	</methods>
	<members>
		<member name="cutoff_hz" type="float" setter="set_cutoff" getter="get_cutoff">
			Threshold frequence for the filter.
		</member>
		<member name="dB" type="int" setter="set_db" getter="get_db" enum="AudioEffectFilter.FilterDB">
			Volume of the effect after the filter in decibels.
		</member>
		<member name="gain" type="float" setter="set_gain" getter="get_gain">
			Gain amount of the frequences after the filter.
		</member>
		<member name="resonance" type="float" setter="set_resonance" getter="get_resonance">
			Amount of boost in the overtones near the cutoff frequence.
		</member>
	</members>
	<constants>
		<constant name="FILTER_6DB" value="0">
		</constant>
		<constant name="FILTER_12DB" value="1">
		</constant>
		<constant name="FILTER_18DB" value="2">
		</constant>
		<constant name="FILTER_24DB" value="3">
		</constant>
	</constants>
</class>
