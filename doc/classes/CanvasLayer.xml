<?xml version="1.0" encoding="UTF-8" ?>
<class name="CanvasLayer" inherits="Node" category="Core" version="3.0.7">
	<brief_description>
		Canvas drawing layer.
	</brief_description>
	<description>
		Canvas drawing layer. [CanvasItem] nodes that are direct or indirect children of a [code]CanvasLayer[/code] will be drawn in that layer. The layer is a numeric index that defines the draw order. The default 2D scene renders with index 0, so a [code]CanvasLayer[/code] with index -1 will be drawn below, and one with index 1 will be drawn above. This is very useful for HUDs (in layer 1+ or above), or backgrounds (in layer -1 or below).
	</description>
	<tutorials>
		http://docs.godotengine.org/en/3.0/tutorials/2d/2d_transforms.html
	http://docs.godotengine.org/en/3.0/tutorials/2d/canvas_layers.html
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="get_world_2d" qualifiers="const">
			<return type="World2D">
			</return>
			<description>
				Returns the own [code]World2D[/code] used by this layer if [code]own_world[/code] is set or [code]null[/code] otherwise.
				This method is deprecated (the future builtin behavior will be [code]CanvasLayer[/code]s not having their own [code]World2D[/code] ever).
			</description>
		</method>
	</methods>
	<members>
		<member name="custom_viewport" type="Node" setter="set_custom_viewport" getter="get_custom_viewport">
			The custom [Viewport] node assigned to the [code]CanvasLayer[/code]. If null, uses the default viewport instead.
		</member>
		<member name="layer" type="int" setter="set_layer" getter="get_layer">
			Layer index for draw order. Lower values are drawn first. Default value: [code]1[/code].
		</member>
		<member name="offset" type="Vector2" setter="set_offset" getter="get_offset">
			The layer's base offset.
		</member>
		<member name="own_world" type="bool" setter="set_use_own_world" getter="is_using_own_world">
			Whether this layer uses its own [code]World2D[/code]; i.e. if this layer has a separate physics space.
			Default value: [code]true[/code]
			This property is deprecated (the future builtin behavior will be as if it was [code]false[/code]).
		</member>
		<member name="rotation" type="float" setter="set_rotation" getter="get_rotation">
			The layer's rotation in radians.
		</member>
		<member name="rotation_degrees" type="float" setter="set_rotation_degrees" getter="get_rotation_degrees">
			The layer's rotation in degrees.
		</member>
		<member name="scale" type="Vector2" setter="set_scale" getter="get_scale">
			The layer's scale.
		</member>
		<member name="transform" type="Transform2D" setter="set_transform" getter="get_transform">
			The layer's transform.
		</member>
	</members>
	<constants>
	</constants>
</class>
