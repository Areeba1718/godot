#!/usr/bin/env python

Import("env")

iphone_lib = [
    "godot_iphone.cpp",
    "os_iphone.cpp",
    "semaphore_iphone.cpp",
    "gl_view.mm",
    "main.m",
    "app_delegate.mm",
    "view_controller.mm",
    "game_center.mm",
    "in_app_store.mm",
    "icloud.mm",
    "ios.mm",
    "gl_view_gesture_recognizer.m",
    "api/ios_singleton.mm",
    "plugin/godot_plugin_registery.mm",
    "plugin/godot_ios_plugin_helper.mm",
    "plugin/godot_vars.m",
    "objc_utils.mm"
]

plugin_lib = [
    "plugin/godot_plugin.m",
    "plugin/signal_info.m",
    "plugin/godot_vars.m"
]

env_ios = env.Clone()
ios_lib = env_ios.add_library("iphone", iphone_lib)
ios_plugin_lib = env_ios.add_library("#bin/libgodot_plugin" + env["LIBSUFFIX"], plugin_lib)

# (iOS) Enable module support
env_ios.Append(CCFLAGS=["-fmodules", "-fcxx-modules"])


def combine_libs(target=None, source=None, env=None):
    lib_path = target[0].srcnode().abspath
    if "osxcross" in env:
        libtool = "$IPHONEPATH/usr/bin/${ios_triple}libtool"
    else:
        libtool = "$IPHONEPATH/usr/bin/libtool"
    env.Execute(
        libtool + ' -static -o "' + lib_path + '" ' + " ".join([('"' + lib.srcnode().abspath + '"') for lib in source])
    )


combine_command = env_ios.Command("#bin/libgodot" + env_ios["LIBSUFFIX"], [ios_lib, ios_plugin_lib] + env_ios["LIBS"], combine_libs)
