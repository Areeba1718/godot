#ifndef DYLIBLOAD_WRAPPER_WAYLAND_EGL
#define DYLIBLOAD_WRAPPER_WAYLAND_EGL
// This file is generated. Do not edit!
// see https://github.com/hpvb/dynload-wrapper for details
// generated by ./generate-wrapper.py 0.3 on 2022-10-24 14:46:56
// flags: ./generate-wrapper.py --include /usr/include/wayland-egl-core.h --sys-include <wayland-egl-core.h> --soname libwayland-egl.so --init-name wayland_egl --output-header wayland-egl-core.h --output-implementation wayland-egl-core.c
//
#include <stdint.h>

#define wl_egl_window_create wl_egl_window_create_dylibloader_orig_wayland_egl
#define wl_egl_window_destroy wl_egl_window_destroy_dylibloader_orig_wayland_egl
#define wl_egl_window_resize wl_egl_window_resize_dylibloader_orig_wayland_egl
#define wl_egl_window_get_attached_size wl_egl_window_get_attached_size_dylibloader_orig_wayland_egl
#include <wayland-egl-core.h>
#undef wl_egl_window_create
#undef wl_egl_window_destroy
#undef wl_egl_window_resize
#undef wl_egl_window_get_attached_size
#ifdef __cplusplus
extern "C" {
#endif
#define wl_egl_window_create wl_egl_window_create_dylibloader_wrapper_wayland_egl
#define wl_egl_window_destroy wl_egl_window_destroy_dylibloader_wrapper_wayland_egl
#define wl_egl_window_resize wl_egl_window_resize_dylibloader_wrapper_wayland_egl
#define wl_egl_window_get_attached_size wl_egl_window_get_attached_size_dylibloader_wrapper_wayland_egl
extern struct wl_egl_window* (*wl_egl_window_create_dylibloader_wrapper_wayland_egl)( struct wl_surface*, int, int);
extern void (*wl_egl_window_destroy_dylibloader_wrapper_wayland_egl)( struct wl_egl_window*);
extern void (*wl_egl_window_resize_dylibloader_wrapper_wayland_egl)( struct wl_egl_window*, int, int, int, int);
extern void (*wl_egl_window_get_attached_size_dylibloader_wrapper_wayland_egl)( struct wl_egl_window*, int*, int*);
int initialize_wayland_egl(int verbose);
#ifdef __cplusplus
}
#endif
#endif
