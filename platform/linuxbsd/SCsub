#!/usr/bin/env python

Import("env")

from platform_methods import run_in_subprocess
import platform_linuxbsd_builders

thirdparty_dir="#thirdparty"

common_linuxbsd = [
    "crash_handler_linuxbsd.cpp",
    "os_linuxbsd.cpp",
    "joypad_linux.cpp",
    "freedesktop_screensaver.cpp",
]

if "x11" in env and env["x11"]:
    common_linuxbsd += [
        "gl_manager_x11.cpp",
        "detect_prime_x11.cpp",
        "display_server_x11.cpp",
        "key_mapping_x11.cpp",
    ]

    if "vulkan" in env and env["vulkan"]:
        common_linuxbsd.append("vulkan_context_x11.cpp")

if "wayland" in env and env["wayland"]:
    common_linuxbsd += [
    	thirdparty_dir + "/wayland/wayland.c",
    	thirdparty_dir + "/xdg-shell/xdg-shell.c",
        "display_server_wayland.cpp",
        "key_mapping_xkb.cpp",
    ]

    if "vulkan" in env and env["vulkan"]:
            common_linuxbsd.append("vulkan_context_wayland.cpp")

if "udev" in env and env["udev"]:
    common_linuxbsd.append("libudev-so_wrap.c")

prog = env.add_program("#bin/godot", ["godot_linuxbsd.cpp"] + common_linuxbsd)

if env["debug_symbols"] and env["separate_debug_symbols"]:
    env.AddPostAction(prog, run_in_subprocess(platform_linuxbsd_builders.make_debug_linuxbsd))
